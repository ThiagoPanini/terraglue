name: ⚙️ CI terraglue

on:
  push:
    branches:
      - develop
      - feature**
  pull_request:
    branches:
      - develop
      - main

permissions:
  id-token: write
  contents: read

jobs:
  ci-python:
    name: ci-python
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Instalação do Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Instalação das Dependências
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ./app/requirements-ci.txt
      
      - name: Análise de Linter - flake8
        run:
          flake8 . --ignore E501

      - name: Análise de Docstrings - pydocstyle
        run:
          pydocstyle --match-dir ./app/src/*.py

  ci-glue-docker-pytest:
    name: ci-glue-docker-pytest
    runs-on: ubuntu-latest
    needs:
      - ci-python

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configuração de Credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: OIDCSession
          aws-region: sa-east-1

      - name: Testes Unitários em Imagem Docker Glue 3.0
        uses: addnab/docker-run-action@v3
        with:
          image: amazon/aws-glue-libs:glue_libs_3.0.0_image_01
          options: |
            -u root
            -v ${{ github.workspace }}:/home/glue_user/workspace/terraglue
            -e DISABLE_SSL=true
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            -e AWS_REGION=sa-east-1
            --rm
            -p 4040:4040 -p 18080:18080
            --name terraglue
          run: |
            cd terraglue
            python3 -m pip install --user --upgrade pip -r app/requirements-container.txt
            python3 -m pytest app/ -vv --color=yes --cov=./ --cov-report=xml

      - name: Cobertura dos Testes - codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  ci-terraform:
    name: ci-terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configuração de Credenciais AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: OIDCSession
          aws-region: sa-east-1

      - name: Configuração e Setup do Terraform
        uses: hashicorp/setup-terraform@v2

      - name: terraform init
        run: |
          cd infra/
          terraform init

      - name: terraform plan
        run: |
          cd infra/
          terraform plan
        continue-on-error: false
